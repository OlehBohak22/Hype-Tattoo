{"version":3,"file":"index.js","sources":["../src/glyph-button/glyph.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'https://cdn.skypack.dev/react';\nimport { render } from 'https://cdn.skypack.dev/react-dom';\n\nconst GLYPHS =\n  'ラドクリフマラソンわたしワタシんょンョたばこタバコとうきょうトウキョウ0123456789±!@#$%^&*()_+ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nconst App = () => {\n  const [text, setText] = useState('Join the course');\n  const [speed, setSpeed] = useState(0.15);\n  const [explode, setExplode] = useState(false);\n\n  useEffect(() => {\n    document.body.dataset.explode = explode;\n  }, [explode]);\n\n  return (\n    <>\n      <button className=\"join-link\" style={{ '--speed': speed }}>\n        {text.split('').map((char, index) => {\n          return (\n            <span\n              key={index}\n              data-char={char}\n              style={{\n                '--index': index,\n                '--char-1': `\"${\n                  GLYPHS[Math.floor(Math.random() * GLYPHS.length)]\n                }\"`,\n                '--char-2': `\"${\n                  GLYPHS[Math.floor(Math.random() * GLYPHS.length)]\n                }\"`,\n                '--char-3': `\"${\n                  GLYPHS[Math.floor(Math.random() * GLYPHS.length)]\n                }\"`,\n              }}\n            >\n              {char}\n            </span>\n          );\n        })}\n        <span className=\"sr-only\">{text}</span>\n      </button>\n      <button className=\"dummy\">{text}</button>\n    </>\n  );\n};\n\n// Масив ID DOM-вузлів\nconst rootNodes = [\n  'app1',\n  'app2',\n  'app3',\n  'app4',\n  'app5',\n  'app6',\n  'app7',\n  'app8',\n  'app9',\n  'app10',\n  'app11',\n  'app12',\n  'app13',\n  'app14',\n  'app15',\n  'app16',\n  'app17',\n  'app18',\n  'app19',\n  'app20',\n  'app21',\n  'app22',\n  'app23',\n  'app24',\n  'app25',\n];\n\n// Цикл для рендерингу компонентів у всі зазначені вузли\nrootNodes.forEach(id => {\n  const rootNode = document.querySelector(`#${id}`);\n  if (rootNode) {\n    render(<App />, rootNode);\n  }\n});\n"],"names":["GLYPHS","App","text","setText","useState","speed","setSpeed","explode","setExplode","useEffect","React","char","index","rootNodes","id","rootNode","render"],"mappings":"4MAGA,MAAMA,EACJ,uFAEIC,EAAM,IAAM,CAChB,KAAM,CAACC,EAAMC,CAAO,EAAIC,EAAS,iBAAiB,EAC5C,CAACC,EAAOC,CAAQ,EAAIF,EAAS,GAAI,EACjC,CAACG,EAASC,CAAU,EAAIJ,EAAS,EAAK,EAE5C,OAAAK,EAAU,IAAM,CACL,SAAA,KAAK,QAAQ,QAAUF,CAAA,EAC/B,CAACA,CAAO,CAAC,kCAIPG,EAAA,cAAA,SAAA,CAAO,UAAU,YAAY,MAAO,CAAE,UAAWL,EAAM,EACrDH,EAAK,MAAM,EAAE,EAAE,IAAI,CAACS,EAAMC,IAEvBF,EAAA,cAAC,OAAA,CACC,IAAKE,EACL,YAAWD,EACX,MAAO,CACL,UAAWC,EACX,WAAY,IACVZ,EAAO,KAAK,MAAM,KAAK,OAAW,EAAAA,EAAO,MAAM,CAAC,CAClD,IACA,WAAY,IACVA,EAAO,KAAK,MAAM,KAAK,OAAW,EAAAA,EAAO,MAAM,CAAC,CAClD,IACA,WAAY,IACVA,EAAO,KAAK,MAAM,KAAK,OAAW,EAAAA,EAAO,MAAM,CAAC,CAClD,GACF,CAAA,EAECW,CAAA,CAGN,EACAD,EAAA,cAAA,OAAA,CAAK,UAAU,SAAW,EAAAR,CAAK,CAClC,EACCQ,EAAA,cAAA,SAAA,CAAO,UAAU,OAAA,EAASR,CAAK,CAClC,CAEJ,EAGMW,EAAY,CAChB,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACF,EAGAA,EAAU,QAAcC,GAAA,CACtB,MAAMC,EAAW,SAAS,cAAc,IAAID,CAAE,EAAE,EAC5CC,GACKC,EAAAN,EAAA,cAACT,EAAI,IAAA,EAAIc,CAAQ,CAE5B,CAAC"}