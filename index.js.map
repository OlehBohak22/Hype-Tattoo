{"version":3,"file":"index.js","sources":["../src/glyph-button/glyph.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'https://cdn.skypack.dev/react';\nimport { render } from 'https://cdn.skypack.dev/react-dom';\n\nconst GLYPHS =\n  'ラドクリフマラソンわたしワタシんょンョたばこタバコとうきょうトウキョウ0123456789±!@#$%^&*()_+ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nconst App = ({ srOnlyTextProp }) => {\n  const [text, setText] = useState(srOnlyTextProp);\n  const [speed, setSpeed] = useState(0.15);\n  const [explode, setExplode] = useState(false);\n\n  useEffect(() => {\n    document.body.dataset.explode = explode;\n  }, [explode]);\n\n  return (\n    <>\n      <button className=\"join-link\" style={{ '--speed': speed }}>\n        {text.split('').map((char, index) => {\n          return (\n            <span\n              key={index}\n              data-char={char}\n              style={{\n                '--index': index,\n                '--char-1': `\"${\n                  GLYPHS[Math.floor(Math.random() * GLYPHS.length)]\n                }\"`,\n                '--char-2': `\"${\n                  GLYPHS[Math.floor(Math.random() * GLYPHS.length)]\n                }\"`,\n                '--char-3': `\"${\n                  GLYPHS[Math.floor(Math.random() * GLYPHS.length)]\n                }\"`,\n              }}\n            >\n              {char}\n            </span>\n          );\n        })}\n        <span className=\"sr-only\">{srOnlyTextProp}</span>\n      </button>\n      <button className=\"dummy\">{text}</button>\n\n      <span className=\"corner-top-right\"></span>\n      <span className=\"corner-bottom-left\"></span>\n    </>\n  );\n};\n\n// Масив ID DOM-вузлів\nconst rootNodes = document.querySelectorAll('[data-sr-text]');\n\n// Цикл для рендерингу компонентів у всі зазначені вузли з текстом із HTML\nrootNodes.forEach(rootNode => {\n  const srOnlyText = rootNode.getAttribute('data-sr-text'); // Отримуємо текст із атрибута\n  render(<App srOnlyTextProp={srOnlyText} />, rootNode);\n});\n"],"names":["GLYPHS","App","srOnlyTextProp","text","setText","useState","speed","setSpeed","explode","setExplode","useEffect","React","char","index","rootNodes","rootNode","srOnlyText","render"],"mappings":"4MAGA,MAAMA,EACJ,uFAEIC,EAAM,CAAC,CAAE,eAAAC,KAAqB,CAClC,KAAM,CAACC,EAAMC,CAAO,EAAIC,EAASH,CAAc,EACzC,CAACI,EAAOC,CAAQ,EAAIF,EAAS,GAAI,EACjC,CAACG,EAASC,CAAU,EAAIJ,EAAS,EAAK,EAE5C,OAAAK,EAAU,IAAM,CACL,SAAA,KAAK,QAAQ,QAAUF,CAAA,EAC/B,CAACA,CAAO,CAAC,kCAIPG,EAAA,cAAA,SAAA,CAAO,UAAU,YAAY,MAAO,CAAE,UAAWL,EAAM,EACrDH,EAAK,MAAM,EAAE,EAAE,IAAI,CAACS,EAAMC,IAEvBF,EAAA,cAAC,OAAA,CACC,IAAKE,EACL,YAAWD,EACX,MAAO,CACL,UAAWC,EACX,WAAY,IACVb,EAAO,KAAK,MAAM,KAAK,OAAW,EAAAA,EAAO,MAAM,CAAC,CAClD,IACA,WAAY,IACVA,EAAO,KAAK,MAAM,KAAK,OAAW,EAAAA,EAAO,MAAM,CAAC,CAClD,IACA,WAAY,IACVA,EAAO,KAAK,MAAM,KAAK,OAAW,EAAAA,EAAO,MAAM,CAAC,CAClD,GACF,CAAA,EAECY,CAAA,CAGN,EACDD,EAAA,cAAC,OAAK,CAAA,UAAU,WAAWT,CAAe,CAC5C,EACAS,EAAA,cAAC,SAAO,CAAA,UAAU,SAASR,CAAK,EAE/BQ,EAAA,cAAA,OAAA,CAAK,UAAU,kBAAmB,CAAA,EAClCA,EAAA,cAAA,OAAA,CAAK,UAAU,oBAAA,CAAqB,CACvC,CAEJ,EAGMG,EAAY,SAAS,iBAAiB,gBAAgB,EAG5DA,EAAU,QAAoBC,GAAA,CACtB,MAAAC,EAAaD,EAAS,aAAa,cAAc,EACvDE,EAAQN,EAAA,cAAAV,EAAA,CAAI,eAAgBe,CAAA,CAAY,EAAID,CAAQ,CACtD,CAAC"}